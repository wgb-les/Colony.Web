//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.0.
// 
#pragma warning disable 1591

namespace Colony.Web.Integration.Mertex {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="servicesSoap", Namespace="http://mertex.redant.com/")]
    public partial class services : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AttemptLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductPricePOCOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPricePOCOListForProductListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductOptionsForImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductListForImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductListForPartialImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductDetailsPOCOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductDetailsListPOCOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangedProductDetailsListPOCOOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BOrderEnquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BRemoveBasketItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BClearBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BGetBasketSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BGetBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BCreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CCreateBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2COrderEnquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarriageOptionsRawOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarriageOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerNameFromCustomerRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAddressesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvoiceEnquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarkInvoiceAsPaidOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CStockLookupRawOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CStockLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CZeroStockCheckOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public services() {
            this.Url = global::Colony.Web.Properties.Settings.Default.Colony_Web_Integration_Mertex_services;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AttemptLoginCompletedEventHandler AttemptLoginCompleted;
        
        /// <remarks/>
        public event GetProductPriceCompletedEventHandler GetProductPriceCompleted;
        
        /// <remarks/>
        public event GetProductPricePOCOCompletedEventHandler GetProductPricePOCOCompleted;
        
        /// <remarks/>
        public event GetPricePOCOListForProductListCompletedEventHandler GetPricePOCOListForProductListCompleted;
        
        /// <remarks/>
        public event GetProductDetailCompletedEventHandler GetProductDetailCompleted;
        
        /// <remarks/>
        public event GetProductOptionsForImportCompletedEventHandler GetProductOptionsForImportCompleted;
        
        /// <remarks/>
        public event GetProductListForImportCompletedEventHandler GetProductListForImportCompleted;
        
        /// <remarks/>
        public event GetProductListForPartialImportCompletedEventHandler GetProductListForPartialImportCompleted;
        
        /// <remarks/>
        public event GetProductDetailsPOCOCompletedEventHandler GetProductDetailsPOCOCompleted;
        
        /// <remarks/>
        public event GetProductDetailsListPOCOCompletedEventHandler GetProductDetailsListPOCOCompleted;
        
        /// <remarks/>
        public event GetChangedProductDetailsListPOCOCompletedEventHandler GetChangedProductDetailsListPOCOCompleted;
        
        /// <remarks/>
        public event B2BOrderEnquiryCompletedEventHandler B2BOrderEnquiryCompleted;
        
        /// <remarks/>
        public event B2BRemoveBasketItemCompletedEventHandler B2BRemoveBasketItemCompleted;
        
        /// <remarks/>
        public event B2BClearBasketCompletedEventHandler B2BClearBasketCompleted;
        
        /// <remarks/>
        public event B2BGetBasketSummaryCompletedEventHandler B2BGetBasketSummaryCompleted;
        
        /// <remarks/>
        public event B2BGetBasketCompletedEventHandler B2BGetBasketCompleted;
        
        /// <remarks/>
        public event B2BCreateOrderCompletedEventHandler B2BCreateOrderCompleted;
        
        /// <remarks/>
        public event B2CCreateBasketCompletedEventHandler B2CCreateBasketCompleted;
        
        /// <remarks/>
        public event B2COrderEnquiryCompletedEventHandler B2COrderEnquiryCompleted;
        
        /// <remarks/>
        public event GetCarriageOptionsRawCompletedEventHandler GetCarriageOptionsRawCompleted;
        
        /// <remarks/>
        public event GetCarriageOptionsCompletedEventHandler GetCarriageOptionsCompleted;
        
        /// <remarks/>
        public event GetStockistCompletedEventHandler GetStockistCompleted;
        
        /// <remarks/>
        public event CustomerNameFromCustomerRefCompletedEventHandler CustomerNameFromCustomerRefCompleted;
        
        /// <remarks/>
        public event GetCustomerAddressesCompletedEventHandler GetCustomerAddressesCompleted;
        
        /// <remarks/>
        public event InvoiceEnquiryCompletedEventHandler InvoiceEnquiryCompleted;
        
        /// <remarks/>
        public event MarkInvoiceAsPaidCompletedEventHandler MarkInvoiceAsPaidCompleted;
        
        /// <remarks/>
        public event B2CStockLookupRawCompletedEventHandler B2CStockLookupRawCompleted;
        
        /// <remarks/>
        public event B2CStockLookupCompletedEventHandler B2CStockLookupCompleted;
        
        /// <remarks/>
        public event B2CZeroStockCheckCompletedEventHandler B2CZeroStockCheckCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/AttemptLogin", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AttemptLogin(string UserName, string Password) {
            object[] results = this.Invoke("AttemptLogin", new object[] {
                        UserName,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AttemptLoginAsync(string UserName, string Password) {
            this.AttemptLoginAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void AttemptLoginAsync(string UserName, string Password, object userState) {
            if ((this.AttemptLoginOperationCompleted == null)) {
                this.AttemptLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttemptLoginOperationCompleted);
            }
            this.InvokeAsync("AttemptLogin", new object[] {
                        UserName,
                        Password}, this.AttemptLoginOperationCompleted, userState);
        }
        
        private void OnAttemptLoginOperationCompleted(object arg) {
            if ((this.AttemptLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttemptLoginCompleted(this, new AttemptLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetProductPrice", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductPrice(string ProductCode) {
            object[] results = this.Invoke("GetProductPrice", new object[] {
                        ProductCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductPriceAsync(string ProductCode) {
            this.GetProductPriceAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductPriceAsync(string ProductCode, object userState) {
            if ((this.GetProductPriceOperationCompleted == null)) {
                this.GetProductPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductPriceOperationCompleted);
            }
            this.InvokeAsync("GetProductPrice", new object[] {
                        ProductCode}, this.GetProductPriceOperationCompleted, userState);
        }
        
        private void OnGetProductPriceOperationCompleted(object arg) {
            if ((this.GetProductPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductPriceCompleted(this, new GetProductPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetProductPricePOCO", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListItem GetProductPricePOCO(string ProductCode) {
            object[] results = this.Invoke("GetProductPricePOCO", new object[] {
                        ProductCode});
            return ((ProductListItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductPricePOCOAsync(string ProductCode) {
            this.GetProductPricePOCOAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductPricePOCOAsync(string ProductCode, object userState) {
            if ((this.GetProductPricePOCOOperationCompleted == null)) {
                this.GetProductPricePOCOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductPricePOCOOperationCompleted);
            }
            this.InvokeAsync("GetProductPricePOCO", new object[] {
                        ProductCode}, this.GetProductPricePOCOOperationCompleted, userState);
        }
        
        private void OnGetProductPricePOCOOperationCompleted(object arg) {
            if ((this.GetProductPricePOCOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductPricePOCOCompleted(this, new GetProductPricePOCOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetPricePOCOListForProductList", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListItem[] GetPricePOCOListForProductList(string[] ProductCodes) {
            object[] results = this.Invoke("GetPricePOCOListForProductList", new object[] {
                        ProductCodes});
            return ((ProductListItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPricePOCOListForProductListAsync(string[] ProductCodes) {
            this.GetPricePOCOListForProductListAsync(ProductCodes, null);
        }
        
        /// <remarks/>
        public void GetPricePOCOListForProductListAsync(string[] ProductCodes, object userState) {
            if ((this.GetPricePOCOListForProductListOperationCompleted == null)) {
                this.GetPricePOCOListForProductListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPricePOCOListForProductListOperationCompleted);
            }
            this.InvokeAsync("GetPricePOCOListForProductList", new object[] {
                        ProductCodes}, this.GetPricePOCOListForProductListOperationCompleted, userState);
        }
        
        private void OnGetPricePOCOListForProductListOperationCompleted(object arg) {
            if ((this.GetPricePOCOListForProductListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPricePOCOListForProductListCompleted(this, new GetPricePOCOListForProductListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetProductDetail", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductDetail(string ProductCode) {
            object[] results = this.Invoke("GetProductDetail", new object[] {
                        ProductCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductDetailAsync(string ProductCode) {
            this.GetProductDetailAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductDetailAsync(string ProductCode, object userState) {
            if ((this.GetProductDetailOperationCompleted == null)) {
                this.GetProductDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductDetailOperationCompleted);
            }
            this.InvokeAsync("GetProductDetail", new object[] {
                        ProductCode}, this.GetProductDetailOperationCompleted, userState);
        }
        
        private void OnGetProductDetailOperationCompleted(object arg) {
            if ((this.GetProductDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductDetailCompleted(this, new GetProductDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetProductOptionsForImport", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductOption[] GetProductOptionsForImport(string productCode) {
            object[] results = this.Invoke("GetProductOptionsForImport", new object[] {
                        productCode});
            return ((ProductOption[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductOptionsForImportAsync(string productCode) {
            this.GetProductOptionsForImportAsync(productCode, null);
        }
        
        /// <remarks/>
        public void GetProductOptionsForImportAsync(string productCode, object userState) {
            if ((this.GetProductOptionsForImportOperationCompleted == null)) {
                this.GetProductOptionsForImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductOptionsForImportOperationCompleted);
            }
            this.InvokeAsync("GetProductOptionsForImport", new object[] {
                        productCode}, this.GetProductOptionsForImportOperationCompleted, userState);
        }
        
        private void OnGetProductOptionsForImportOperationCompleted(object arg) {
            if ((this.GetProductOptionsForImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductOptionsForImportCompleted(this, new GetProductOptionsForImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetProductListForImport", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductForImport[] GetProductListForImport() {
            object[] results = this.Invoke("GetProductListForImport", new object[0]);
            return ((ProductForImport[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductListForImportAsync() {
            this.GetProductListForImportAsync(null);
        }
        
        /// <remarks/>
        public void GetProductListForImportAsync(object userState) {
            if ((this.GetProductListForImportOperationCompleted == null)) {
                this.GetProductListForImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductListForImportOperationCompleted);
            }
            this.InvokeAsync("GetProductListForImport", new object[0], this.GetProductListForImportOperationCompleted, userState);
        }
        
        private void OnGetProductListForImportOperationCompleted(object arg) {
            if ((this.GetProductListForImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductListForImportCompleted(this, new GetProductListForImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetProductListForPartialImport", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductForImport[] GetProductListForPartialImport(System.DateTime startDateTime, System.DateTime endDateTime) {
            object[] results = this.Invoke("GetProductListForPartialImport", new object[] {
                        startDateTime,
                        endDateTime});
            return ((ProductForImport[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductListForPartialImportAsync(System.DateTime startDateTime, System.DateTime endDateTime) {
            this.GetProductListForPartialImportAsync(startDateTime, endDateTime, null);
        }
        
        /// <remarks/>
        public void GetProductListForPartialImportAsync(System.DateTime startDateTime, System.DateTime endDateTime, object userState) {
            if ((this.GetProductListForPartialImportOperationCompleted == null)) {
                this.GetProductListForPartialImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductListForPartialImportOperationCompleted);
            }
            this.InvokeAsync("GetProductListForPartialImport", new object[] {
                        startDateTime,
                        endDateTime}, this.GetProductListForPartialImportOperationCompleted, userState);
        }
        
        private void OnGetProductListForPartialImportOperationCompleted(object arg) {
            if ((this.GetProductListForPartialImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductListForPartialImportCompleted(this, new GetProductListForPartialImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetProductDetailsPOCO", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDetail GetProductDetailsPOCO(string ProductCode) {
            object[] results = this.Invoke("GetProductDetailsPOCO", new object[] {
                        ProductCode});
            return ((ProductDetail)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductDetailsPOCOAsync(string ProductCode) {
            this.GetProductDetailsPOCOAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductDetailsPOCOAsync(string ProductCode, object userState) {
            if ((this.GetProductDetailsPOCOOperationCompleted == null)) {
                this.GetProductDetailsPOCOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductDetailsPOCOOperationCompleted);
            }
            this.InvokeAsync("GetProductDetailsPOCO", new object[] {
                        ProductCode}, this.GetProductDetailsPOCOOperationCompleted, userState);
        }
        
        private void OnGetProductDetailsPOCOOperationCompleted(object arg) {
            if ((this.GetProductDetailsPOCOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductDetailsPOCOCompleted(this, new GetProductDetailsPOCOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetProductDetailsListPOCO", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDetail[] GetProductDetailsListPOCO(string ProductCode) {
            object[] results = this.Invoke("GetProductDetailsListPOCO", new object[] {
                        ProductCode});
            return ((ProductDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductDetailsListPOCOAsync(string ProductCode) {
            this.GetProductDetailsListPOCOAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductDetailsListPOCOAsync(string ProductCode, object userState) {
            if ((this.GetProductDetailsListPOCOOperationCompleted == null)) {
                this.GetProductDetailsListPOCOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductDetailsListPOCOOperationCompleted);
            }
            this.InvokeAsync("GetProductDetailsListPOCO", new object[] {
                        ProductCode}, this.GetProductDetailsListPOCOOperationCompleted, userState);
        }
        
        private void OnGetProductDetailsListPOCOOperationCompleted(object arg) {
            if ((this.GetProductDetailsListPOCOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductDetailsListPOCOCompleted(this, new GetProductDetailsListPOCOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetChangedProductDetailsListPOCO", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDetail[] GetChangedProductDetailsListPOCO(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetChangedProductDetailsListPOCO", new object[] {
                        startDate,
                        endDate});
            return ((ProductDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChangedProductDetailsListPOCOAsync(System.DateTime startDate, System.DateTime endDate) {
            this.GetChangedProductDetailsListPOCOAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetChangedProductDetailsListPOCOAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetChangedProductDetailsListPOCOOperationCompleted == null)) {
                this.GetChangedProductDetailsListPOCOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangedProductDetailsListPOCOOperationCompleted);
            }
            this.InvokeAsync("GetChangedProductDetailsListPOCO", new object[] {
                        startDate,
                        endDate}, this.GetChangedProductDetailsListPOCOOperationCompleted, userState);
        }
        
        private void OnGetChangedProductDetailsListPOCOOperationCompleted(object arg) {
            if ((this.GetChangedProductDetailsListPOCOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangedProductDetailsListPOCOCompleted(this, new GetChangedProductDetailsListPOCOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2BOrderEnquiry", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string B2BOrderEnquiry(string OrderNumber) {
            object[] results = this.Invoke("B2BOrderEnquiry", new object[] {
                        OrderNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void B2BOrderEnquiryAsync(string OrderNumber) {
            this.B2BOrderEnquiryAsync(OrderNumber, null);
        }
        
        /// <remarks/>
        public void B2BOrderEnquiryAsync(string OrderNumber, object userState) {
            if ((this.B2BOrderEnquiryOperationCompleted == null)) {
                this.B2BOrderEnquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BOrderEnquiryOperationCompleted);
            }
            this.InvokeAsync("B2BOrderEnquiry", new object[] {
                        OrderNumber}, this.B2BOrderEnquiryOperationCompleted, userState);
        }
        
        private void OnB2BOrderEnquiryOperationCompleted(object arg) {
            if ((this.B2BOrderEnquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BOrderEnquiryCompleted(this, new B2BOrderEnquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2BRemoveBasketItem", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void B2BRemoveBasketItem(string userId, string userPassword, string basketGuid, string customerRef, string lineNumber, string account) {
            this.Invoke("B2BRemoveBasketItem", new object[] {
                        userId,
                        userPassword,
                        basketGuid,
                        customerRef,
                        lineNumber,
                        account});
        }
        
        /// <remarks/>
        public void B2BRemoveBasketItemAsync(string userId, string userPassword, string basketGuid, string customerRef, string lineNumber, string account) {
            this.B2BRemoveBasketItemAsync(userId, userPassword, basketGuid, customerRef, lineNumber, account, null);
        }
        
        /// <remarks/>
        public void B2BRemoveBasketItemAsync(string userId, string userPassword, string basketGuid, string customerRef, string lineNumber, string account, object userState) {
            if ((this.B2BRemoveBasketItemOperationCompleted == null)) {
                this.B2BRemoveBasketItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BRemoveBasketItemOperationCompleted);
            }
            this.InvokeAsync("B2BRemoveBasketItem", new object[] {
                        userId,
                        userPassword,
                        basketGuid,
                        customerRef,
                        lineNumber,
                        account}, this.B2BRemoveBasketItemOperationCompleted, userState);
        }
        
        private void OnB2BRemoveBasketItemOperationCompleted(object arg) {
            if ((this.B2BRemoveBasketItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BRemoveBasketItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2BClearBasket", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void B2BClearBasket(string userId, string userPassword, string basketGuid, string customerRef) {
            this.Invoke("B2BClearBasket", new object[] {
                        userId,
                        userPassword,
                        basketGuid,
                        customerRef});
        }
        
        /// <remarks/>
        public void B2BClearBasketAsync(string userId, string userPassword, string basketGuid, string customerRef) {
            this.B2BClearBasketAsync(userId, userPassword, basketGuid, customerRef, null);
        }
        
        /// <remarks/>
        public void B2BClearBasketAsync(string userId, string userPassword, string basketGuid, string customerRef, object userState) {
            if ((this.B2BClearBasketOperationCompleted == null)) {
                this.B2BClearBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BClearBasketOperationCompleted);
            }
            this.InvokeAsync("B2BClearBasket", new object[] {
                        userId,
                        userPassword,
                        basketGuid,
                        customerRef}, this.B2BClearBasketOperationCompleted, userState);
        }
        
        private void OnB2BClearBasketOperationCompleted(object arg) {
            if ((this.B2BClearBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BClearBasketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2BGetBasketSummary", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Basket B2BGetBasketSummary() {
            object[] results = this.Invoke("B2BGetBasketSummary", new object[0]);
            return ((Basket)(results[0]));
        }
        
        /// <remarks/>
        public void B2BGetBasketSummaryAsync() {
            this.B2BGetBasketSummaryAsync(null);
        }
        
        /// <remarks/>
        public void B2BGetBasketSummaryAsync(object userState) {
            if ((this.B2BGetBasketSummaryOperationCompleted == null)) {
                this.B2BGetBasketSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BGetBasketSummaryOperationCompleted);
            }
            this.InvokeAsync("B2BGetBasketSummary", new object[0], this.B2BGetBasketSummaryOperationCompleted, userState);
        }
        
        private void OnB2BGetBasketSummaryOperationCompleted(object arg) {
            if ((this.B2BGetBasketSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BGetBasketSummaryCompleted(this, new B2BGetBasketSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2BGetBasket", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BasketViewModel[] B2BGetBasket(string userId, string userPassword, string basketGuid) {
            object[] results = this.Invoke("B2BGetBasket", new object[] {
                        userId,
                        userPassword,
                        basketGuid});
            return ((BasketViewModel[])(results[0]));
        }
        
        /// <remarks/>
        public void B2BGetBasketAsync(string userId, string userPassword, string basketGuid) {
            this.B2BGetBasketAsync(userId, userPassword, basketGuid, null);
        }
        
        /// <remarks/>
        public void B2BGetBasketAsync(string userId, string userPassword, string basketGuid, object userState) {
            if ((this.B2BGetBasketOperationCompleted == null)) {
                this.B2BGetBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BGetBasketOperationCompleted);
            }
            this.InvokeAsync("B2BGetBasket", new object[] {
                        userId,
                        userPassword,
                        basketGuid}, this.B2BGetBasketOperationCompleted, userState);
        }
        
        private void OnB2BGetBasketOperationCompleted(object arg) {
            if ((this.B2BGetBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BGetBasketCompleted(this, new B2BGetBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2BCreateOrder", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string B2BCreateOrder(string userId, string userPassword, string basketGuid, string customerReference, string address, string orderReference, string deliveryInstructions, bool isPriority, bool isPaidByCard, string deliveryAddressReference, string CFAAddress, string CFAPhone, string CFACountry) {
            object[] results = this.Invoke("B2BCreateOrder", new object[] {
                        userId,
                        userPassword,
                        basketGuid,
                        customerReference,
                        address,
                        orderReference,
                        deliveryInstructions,
                        isPriority,
                        isPaidByCard,
                        deliveryAddressReference,
                        CFAAddress,
                        CFAPhone,
                        CFACountry});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void B2BCreateOrderAsync(string userId, string userPassword, string basketGuid, string customerReference, string address, string orderReference, string deliveryInstructions, bool isPriority, bool isPaidByCard, string deliveryAddressReference, string CFAAddress, string CFAPhone, string CFACountry) {
            this.B2BCreateOrderAsync(userId, userPassword, basketGuid, customerReference, address, orderReference, deliveryInstructions, isPriority, isPaidByCard, deliveryAddressReference, CFAAddress, CFAPhone, CFACountry, null);
        }
        
        /// <remarks/>
        public void B2BCreateOrderAsync(string userId, string userPassword, string basketGuid, string customerReference, string address, string orderReference, string deliveryInstructions, bool isPriority, bool isPaidByCard, string deliveryAddressReference, string CFAAddress, string CFAPhone, string CFACountry, object userState) {
            if ((this.B2BCreateOrderOperationCompleted == null)) {
                this.B2BCreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BCreateOrderOperationCompleted);
            }
            this.InvokeAsync("B2BCreateOrder", new object[] {
                        userId,
                        userPassword,
                        basketGuid,
                        customerReference,
                        address,
                        orderReference,
                        deliveryInstructions,
                        isPriority,
                        isPaidByCard,
                        deliveryAddressReference,
                        CFAAddress,
                        CFAPhone,
                        CFACountry}, this.B2BCreateOrderOperationCompleted, userState);
        }
        
        private void OnB2BCreateOrderOperationCompleted(object arg) {
            if ((this.B2BCreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BCreateOrderCompleted(this, new B2BCreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2CCreateBasket", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string B2CCreateBasket(string customerNumber, OrderLine[] orderLines, Order order) {
            object[] results = this.Invoke("B2CCreateBasket", new object[] {
                        customerNumber,
                        orderLines,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void B2CCreateBasketAsync(string customerNumber, OrderLine[] orderLines, Order order) {
            this.B2CCreateBasketAsync(customerNumber, orderLines, order, null);
        }
        
        /// <remarks/>
        public void B2CCreateBasketAsync(string customerNumber, OrderLine[] orderLines, Order order, object userState) {
            if ((this.B2CCreateBasketOperationCompleted == null)) {
                this.B2CCreateBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CCreateBasketOperationCompleted);
            }
            this.InvokeAsync("B2CCreateBasket", new object[] {
                        customerNumber,
                        orderLines,
                        order}, this.B2CCreateBasketOperationCompleted, userState);
        }
        
        private void OnB2CCreateBasketOperationCompleted(object arg) {
            if ((this.B2CCreateBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CCreateBasketCompleted(this, new B2CCreateBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2COrderEnquiry", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderStatus B2COrderEnquiry(string orderNumber) {
            object[] results = this.Invoke("B2COrderEnquiry", new object[] {
                        orderNumber});
            return ((OrderStatus)(results[0]));
        }
        
        /// <remarks/>
        public void B2COrderEnquiryAsync(string orderNumber) {
            this.B2COrderEnquiryAsync(orderNumber, null);
        }
        
        /// <remarks/>
        public void B2COrderEnquiryAsync(string orderNumber, object userState) {
            if ((this.B2COrderEnquiryOperationCompleted == null)) {
                this.B2COrderEnquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2COrderEnquiryOperationCompleted);
            }
            this.InvokeAsync("B2COrderEnquiry", new object[] {
                        orderNumber}, this.B2COrderEnquiryOperationCompleted, userState);
        }
        
        private void OnB2COrderEnquiryOperationCompleted(object arg) {
            if ((this.B2COrderEnquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2COrderEnquiryCompleted(this, new B2COrderEnquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetCarriageOptionsRaw", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCarriageOptionsRaw() {
            object[] results = this.Invoke("GetCarriageOptionsRaw", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarriageOptionsRawAsync() {
            this.GetCarriageOptionsRawAsync(null);
        }
        
        /// <remarks/>
        public void GetCarriageOptionsRawAsync(object userState) {
            if ((this.GetCarriageOptionsRawOperationCompleted == null)) {
                this.GetCarriageOptionsRawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarriageOptionsRawOperationCompleted);
            }
            this.InvokeAsync("GetCarriageOptionsRaw", new object[0], this.GetCarriageOptionsRawOperationCompleted, userState);
        }
        
        private void OnGetCarriageOptionsRawOperationCompleted(object arg) {
            if ((this.GetCarriageOptionsRawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarriageOptionsRawCompleted(this, new GetCarriageOptionsRawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetCarriageOptions", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CarriageOption[] GetCarriageOptions() {
            object[] results = this.Invoke("GetCarriageOptions", new object[0]);
            return ((CarriageOption[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCarriageOptionsAsync() {
            this.GetCarriageOptionsAsync(null);
        }
        
        /// <remarks/>
        public void GetCarriageOptionsAsync(object userState) {
            if ((this.GetCarriageOptionsOperationCompleted == null)) {
                this.GetCarriageOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarriageOptionsOperationCompleted);
            }
            this.InvokeAsync("GetCarriageOptions", new object[0], this.GetCarriageOptionsOperationCompleted, userState);
        }
        
        private void OnGetCarriageOptionsOperationCompleted(object arg) {
            if ((this.GetCarriageOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarriageOptionsCompleted(this, new GetCarriageOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetStockist", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Stockist[] GetStockist() {
            object[] results = this.Invoke("GetStockist", new object[0]);
            return ((Stockist[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStockistAsync() {
            this.GetStockistAsync(null);
        }
        
        /// <remarks/>
        public void GetStockistAsync(object userState) {
            if ((this.GetStockistOperationCompleted == null)) {
                this.GetStockistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockistOperationCompleted);
            }
            this.InvokeAsync("GetStockist", new object[0], this.GetStockistOperationCompleted, userState);
        }
        
        private void OnGetStockistOperationCompleted(object arg) {
            if ((this.GetStockistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockistCompleted(this, new GetStockistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/CustomerNameFromCustomerRef", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CustomerNameFromCustomerRef(string customerRef) {
            object[] results = this.Invoke("CustomerNameFromCustomerRef", new object[] {
                        customerRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerNameFromCustomerRefAsync(string customerRef) {
            this.CustomerNameFromCustomerRefAsync(customerRef, null);
        }
        
        /// <remarks/>
        public void CustomerNameFromCustomerRefAsync(string customerRef, object userState) {
            if ((this.CustomerNameFromCustomerRefOperationCompleted == null)) {
                this.CustomerNameFromCustomerRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerNameFromCustomerRefOperationCompleted);
            }
            this.InvokeAsync("CustomerNameFromCustomerRef", new object[] {
                        customerRef}, this.CustomerNameFromCustomerRefOperationCompleted, userState);
        }
        
        private void OnCustomerNameFromCustomerRefOperationCompleted(object arg) {
            if ((this.CustomerNameFromCustomerRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerNameFromCustomerRefCompleted(this, new CustomerNameFromCustomerRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/GetCustomerAddresses", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress[] GetCustomerAddresses(string customerReference) {
            object[] results = this.Invoke("GetCustomerAddresses", new object[] {
                        customerReference});
            return ((CustomerAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAddressesAsync(string customerReference) {
            this.GetCustomerAddressesAsync(customerReference, null);
        }
        
        /// <remarks/>
        public void GetCustomerAddressesAsync(string customerReference, object userState) {
            if ((this.GetCustomerAddressesOperationCompleted == null)) {
                this.GetCustomerAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAddressesOperationCompleted);
            }
            this.InvokeAsync("GetCustomerAddresses", new object[] {
                        customerReference}, this.GetCustomerAddressesOperationCompleted, userState);
        }
        
        private void OnGetCustomerAddressesOperationCompleted(object arg) {
            if ((this.GetCustomerAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAddressesCompleted(this, new GetCustomerAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/InvoiceEnquiry", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InvoiceEnquiry(string userId, string userPassword, string orderNumber, string account, string customerRef) {
            object[] results = this.Invoke("InvoiceEnquiry", new object[] {
                        userId,
                        userPassword,
                        orderNumber,
                        account,
                        customerRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InvoiceEnquiryAsync(string userId, string userPassword, string orderNumber, string account, string customerRef) {
            this.InvoiceEnquiryAsync(userId, userPassword, orderNumber, account, customerRef, null);
        }
        
        /// <remarks/>
        public void InvoiceEnquiryAsync(string userId, string userPassword, string orderNumber, string account, string customerRef, object userState) {
            if ((this.InvoiceEnquiryOperationCompleted == null)) {
                this.InvoiceEnquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvoiceEnquiryOperationCompleted);
            }
            this.InvokeAsync("InvoiceEnquiry", new object[] {
                        userId,
                        userPassword,
                        orderNumber,
                        account,
                        customerRef}, this.InvoiceEnquiryOperationCompleted, userState);
        }
        
        private void OnInvoiceEnquiryOperationCompleted(object arg) {
            if ((this.InvoiceEnquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvoiceEnquiryCompleted(this, new InvoiceEnquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/MarkInvoiceAsPaid", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MarkInvoiceAsPaid(string userId, string userPassword, string orderNumber, string account, string customerRef) {
            object[] results = this.Invoke("MarkInvoiceAsPaid", new object[] {
                        userId,
                        userPassword,
                        orderNumber,
                        account,
                        customerRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MarkInvoiceAsPaidAsync(string userId, string userPassword, string orderNumber, string account, string customerRef) {
            this.MarkInvoiceAsPaidAsync(userId, userPassword, orderNumber, account, customerRef, null);
        }
        
        /// <remarks/>
        public void MarkInvoiceAsPaidAsync(string userId, string userPassword, string orderNumber, string account, string customerRef, object userState) {
            if ((this.MarkInvoiceAsPaidOperationCompleted == null)) {
                this.MarkInvoiceAsPaidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkInvoiceAsPaidOperationCompleted);
            }
            this.InvokeAsync("MarkInvoiceAsPaid", new object[] {
                        userId,
                        userPassword,
                        orderNumber,
                        account,
                        customerRef}, this.MarkInvoiceAsPaidOperationCompleted, userState);
        }
        
        private void OnMarkInvoiceAsPaidOperationCompleted(object arg) {
            if ((this.MarkInvoiceAsPaidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkInvoiceAsPaidCompleted(this, new MarkInvoiceAsPaidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2CStockLookupRaw", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string B2CStockLookupRaw(string customerNumber, string productcode) {
            object[] results = this.Invoke("B2CStockLookupRaw", new object[] {
                        customerNumber,
                        productcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void B2CStockLookupRawAsync(string customerNumber, string productcode) {
            this.B2CStockLookupRawAsync(customerNumber, productcode, null);
        }
        
        /// <remarks/>
        public void B2CStockLookupRawAsync(string customerNumber, string productcode, object userState) {
            if ((this.B2CStockLookupRawOperationCompleted == null)) {
                this.B2CStockLookupRawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CStockLookupRawOperationCompleted);
            }
            this.InvokeAsync("B2CStockLookupRaw", new object[] {
                        customerNumber,
                        productcode}, this.B2CStockLookupRawOperationCompleted, userState);
        }
        
        private void OnB2CStockLookupRawOperationCompleted(object arg) {
            if ((this.B2CStockLookupRawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CStockLookupRawCompleted(this, new B2CStockLookupRawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2CStockLookup", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StockAvailable B2CStockLookup(string customerNumber, string productcode) {
            object[] results = this.Invoke("B2CStockLookup", new object[] {
                        customerNumber,
                        productcode});
            return ((StockAvailable)(results[0]));
        }
        
        /// <remarks/>
        public void B2CStockLookupAsync(string customerNumber, string productcode) {
            this.B2CStockLookupAsync(customerNumber, productcode, null);
        }
        
        /// <remarks/>
        public void B2CStockLookupAsync(string customerNumber, string productcode, object userState) {
            if ((this.B2CStockLookupOperationCompleted == null)) {
                this.B2CStockLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CStockLookupOperationCompleted);
            }
            this.InvokeAsync("B2CStockLookup", new object[] {
                        customerNumber,
                        productcode}, this.B2CStockLookupOperationCompleted, userState);
        }
        
        private void OnB2CStockLookupOperationCompleted(object arg) {
            if ((this.B2CStockLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CStockLookupCompleted(this, new B2CStockLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mertex.redant.com/B2CZeroStockCheck", RequestNamespace="http://mertex.redant.com/", ResponseNamespace="http://mertex.redant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StockAvailable[] B2CZeroStockCheck() {
            object[] results = this.Invoke("B2CZeroStockCheck", new object[0]);
            return ((StockAvailable[])(results[0]));
        }
        
        /// <remarks/>
        public void B2CZeroStockCheckAsync() {
            this.B2CZeroStockCheckAsync(null);
        }
        
        /// <remarks/>
        public void B2CZeroStockCheckAsync(object userState) {
            if ((this.B2CZeroStockCheckOperationCompleted == null)) {
                this.B2CZeroStockCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CZeroStockCheckOperationCompleted);
            }
            this.InvokeAsync("B2CZeroStockCheck", new object[0], this.B2CZeroStockCheckOperationCompleted, userState);
        }
        
        private void OnB2CZeroStockCheckOperationCompleted(object arg) {
            if ((this.B2CZeroStockCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CZeroStockCheckCompleted(this, new B2CZeroStockCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class ProductListItem {
        
        private string product_CodeField;
        
        private string priceField;
        
        private string stockLevelField;
        
        private string stockLevelUnitOfMeasurementField;
        
        private string dueInField;
        
        private string dueInQuantityField;
        
        /// <remarks/>
        public string Product_Code {
            get {
                return this.product_CodeField;
            }
            set {
                this.product_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string StockLevel {
            get {
                return this.stockLevelField;
            }
            set {
                this.stockLevelField = value;
            }
        }
        
        /// <remarks/>
        public string StockLevelUnitOfMeasurement {
            get {
                return this.stockLevelUnitOfMeasurementField;
            }
            set {
                this.stockLevelUnitOfMeasurementField = value;
            }
        }
        
        /// <remarks/>
        public string DueIn {
            get {
                return this.dueInField;
            }
            set {
                this.dueInField = value;
            }
        }
        
        /// <remarks/>
        public string DueInQuantity {
            get {
                return this.dueInQuantityField;
            }
            set {
                this.dueInQuantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class StockAvailable {
        
        private string productCodeField;
        
        private string item_Level_StockField;
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Item_Level_Stock {
            get {
                return this.item_Level_StockField;
            }
            set {
                this.item_Level_StockField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class Stockist {
        
        private string customer_AccountField;
        
        private string nameField;
        
        private string address_Line1Field;
        
        private string address_Line2Field;
        
        private string townField;
        
        private string countyField;
        
        private string post_Zip_CodeField;
        
        private string telephoneField;
        
        private string faxField;
        
        private string emailField;
        
        private string websiteField;
        
        private string customerTypeField;
        
        private string imageField;
        
        private string social_LinksField;
        
        private string countryField;
        
        private string social_Links_TypeField;
        
        private string eclaField;
        
        private string expField;
        
        private string stockist_GroupField;
        
        private string openingTimesField;
        
        private string otherInfoField;
        
        private string salesDivisionsField;
        
        /// <remarks/>
        public string Customer_Account {
            get {
                return this.customer_AccountField;
            }
            set {
                this.customer_AccountField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address_Line1 {
            get {
                return this.address_Line1Field;
            }
            set {
                this.address_Line1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address_Line2 {
            get {
                return this.address_Line2Field;
            }
            set {
                this.address_Line2Field = value;
            }
        }
        
        /// <remarks/>
        public string Town {
            get {
                return this.townField;
            }
            set {
                this.townField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string Post_Zip_Code {
            get {
                return this.post_Zip_CodeField;
            }
            set {
                this.post_Zip_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerType {
            get {
                return this.customerTypeField;
            }
            set {
                this.customerTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string Social_Links {
            get {
                return this.social_LinksField;
            }
            set {
                this.social_LinksField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Social_Links_Type {
            get {
                return this.social_Links_TypeField;
            }
            set {
                this.social_Links_TypeField = value;
            }
        }
        
        /// <remarks/>
        public string Ecla {
            get {
                return this.eclaField;
            }
            set {
                this.eclaField = value;
            }
        }
        
        /// <remarks/>
        public string Exp {
            get {
                return this.expField;
            }
            set {
                this.expField = value;
            }
        }
        
        /// <remarks/>
        public string Stockist_Group {
            get {
                return this.stockist_GroupField;
            }
            set {
                this.stockist_GroupField = value;
            }
        }
        
        /// <remarks/>
        public string OpeningTimes {
            get {
                return this.openingTimesField;
            }
            set {
                this.openingTimesField = value;
            }
        }
        
        /// <remarks/>
        public string OtherInfo {
            get {
                return this.otherInfoField;
            }
            set {
                this.otherInfoField = value;
            }
        }
        
        /// <remarks/>
        public string SalesDivisions {
            get {
                return this.salesDivisionsField;
            }
            set {
                this.salesDivisionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class CarriageOption {
        
        private string carriageKeyField;
        
        private string countryField;
        
        private string currencyField;
        
        private string itemTypeField;
        
        private string carriageTypeField;
        
        private string haulierCodeField;
        
        private string carriageCodeField;
        
        private string webCutOffTimeField;
        
        private string webCutOffDayField;
        
        private string minimumSampleChargeField;
        
        private string perSampleChargeField;
        
        private string maxSampleQtyField;
        
        private string splitOrderSurchargeField;
        
        private string multiCarriageSurchargeField;
        
        private string numberOfSamplesMinChargeAppliesToField;
        
        private string carriageMinValueField;
        
        private string carriageMaxValueField;
        
        private string carriageChargeField;
        
        private string carriageCountryField;
        
        private string mertexAccountField;
        
        /// <remarks/>
        public string CarriageKey {
            get {
                return this.carriageKeyField;
            }
            set {
                this.carriageKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageType {
            get {
                return this.carriageTypeField;
            }
            set {
                this.carriageTypeField = value;
            }
        }
        
        /// <remarks/>
        public string HaulierCode {
            get {
                return this.haulierCodeField;
            }
            set {
                this.haulierCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageCode {
            get {
                return this.carriageCodeField;
            }
            set {
                this.carriageCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WebCutOffTime {
            get {
                return this.webCutOffTimeField;
            }
            set {
                this.webCutOffTimeField = value;
            }
        }
        
        /// <remarks/>
        public string WebCutOffDay {
            get {
                return this.webCutOffDayField;
            }
            set {
                this.webCutOffDayField = value;
            }
        }
        
        /// <remarks/>
        public string MinimumSampleCharge {
            get {
                return this.minimumSampleChargeField;
            }
            set {
                this.minimumSampleChargeField = value;
            }
        }
        
        /// <remarks/>
        public string PerSampleCharge {
            get {
                return this.perSampleChargeField;
            }
            set {
                this.perSampleChargeField = value;
            }
        }
        
        /// <remarks/>
        public string MaxSampleQty {
            get {
                return this.maxSampleQtyField;
            }
            set {
                this.maxSampleQtyField = value;
            }
        }
        
        /// <remarks/>
        public string SplitOrderSurcharge {
            get {
                return this.splitOrderSurchargeField;
            }
            set {
                this.splitOrderSurchargeField = value;
            }
        }
        
        /// <remarks/>
        public string MultiCarriageSurcharge {
            get {
                return this.multiCarriageSurchargeField;
            }
            set {
                this.multiCarriageSurchargeField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfSamplesMinChargeAppliesTo {
            get {
                return this.numberOfSamplesMinChargeAppliesToField;
            }
            set {
                this.numberOfSamplesMinChargeAppliesToField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageMinValue {
            get {
                return this.carriageMinValueField;
            }
            set {
                this.carriageMinValueField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageMaxValue {
            get {
                return this.carriageMaxValueField;
            }
            set {
                this.carriageMaxValueField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageCharge {
            get {
                return this.carriageChargeField;
            }
            set {
                this.carriageChargeField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageCountry {
            get {
                return this.carriageCountryField;
            }
            set {
                this.carriageCountryField = value;
            }
        }
        
        /// <remarks/>
        public string MertexAccount {
            get {
                return this.mertexAccountField;
            }
            set {
                this.mertexAccountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class OrderStatus {
        
        private string lineNumberField;
        
        private string orderNumberField;
        
        private string quantityOrderedField;
        
        private string productCodeField;
        
        private string descriptionField;
        
        private string customerOrderRefField;
        
        private string orderStatsTextField;
        
        private string parcelField;
        
        /// <remarks/>
        public string LineNumber {
            get {
                return this.lineNumberField;
            }
            set {
                this.lineNumberField = value;
            }
        }
        
        /// <remarks/>
        public string OrderNumber {
            get {
                return this.orderNumberField;
            }
            set {
                this.orderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string QuantityOrdered {
            get {
                return this.quantityOrderedField;
            }
            set {
                this.quantityOrderedField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerOrderRef {
            get {
                return this.customerOrderRefField;
            }
            set {
                this.customerOrderRefField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatsText {
            get {
                return this.orderStatsTextField;
            }
            set {
                this.orderStatsTextField = value;
            }
        }
        
        /// <remarks/>
        public string Parcel {
            get {
                return this.parcelField;
            }
            set {
                this.parcelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class Address {
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string address4Field;
        
        private string postcodeField;
        
        private string teleNoField;
        
        private string domesticTradeIndicatorField;
        
        private string countryCodeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string Address4 {
            get {
                return this.address4Field;
            }
            set {
                this.address4Field = value;
            }
        }
        
        /// <remarks/>
        public string Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public string TeleNo {
            get {
                return this.teleNoField;
            }
            set {
                this.teleNoField = value;
            }
        }
        
        /// <remarks/>
        public string DomesticTradeIndicator {
            get {
                return this.domesticTradeIndicatorField;
            }
            set {
                this.domesticTradeIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class Order {
        
        private string customerAccountCodeField;
        
        private string deliveryReferenceField;
        
        private Address deliveryAddressField;
        
        private string emailField;
        
        private string customerOrderReferenceField;
        
        private string haulierCodeField;
        
        private string priorityOrderIndicatorField;
        
        private string giftWrapIndicatorField;
        
        private string partDeliveryRequestedField;
        
        private string orderValueField;
        
        private string carriageServiceCodeField;
        
        private string carriageVATCodeField;
        
        private string carriageValueField;
        
        private string carriageVATValueField;
        
        private string taxExemptionCertField;
        
        private string deliveryRequiredDateField;
        
        private string specialInstructionsField;
        
        private string fromCSVFileField;
        
        private string sampleBasketIDField;
        
        private string orderNoField;
        
        private OrderLine[] orderLinesField;
        
        /// <remarks/>
        public string CustomerAccountCode {
            get {
                return this.customerAccountCodeField;
            }
            set {
                this.customerAccountCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryReference {
            get {
                return this.deliveryReferenceField;
            }
            set {
                this.deliveryReferenceField = value;
            }
        }
        
        /// <remarks/>
        public Address DeliveryAddress {
            get {
                return this.deliveryAddressField;
            }
            set {
                this.deliveryAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerOrderReference {
            get {
                return this.customerOrderReferenceField;
            }
            set {
                this.customerOrderReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string HaulierCode {
            get {
                return this.haulierCodeField;
            }
            set {
                this.haulierCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PriorityOrderIndicator {
            get {
                return this.priorityOrderIndicatorField;
            }
            set {
                this.priorityOrderIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string GiftWrapIndicator {
            get {
                return this.giftWrapIndicatorField;
            }
            set {
                this.giftWrapIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string PartDeliveryRequested {
            get {
                return this.partDeliveryRequestedField;
            }
            set {
                this.partDeliveryRequestedField = value;
            }
        }
        
        /// <remarks/>
        public string OrderValue {
            get {
                return this.orderValueField;
            }
            set {
                this.orderValueField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageServiceCode {
            get {
                return this.carriageServiceCodeField;
            }
            set {
                this.carriageServiceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageVATCode {
            get {
                return this.carriageVATCodeField;
            }
            set {
                this.carriageVATCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageValue {
            get {
                return this.carriageValueField;
            }
            set {
                this.carriageValueField = value;
            }
        }
        
        /// <remarks/>
        public string CarriageVATValue {
            get {
                return this.carriageVATValueField;
            }
            set {
                this.carriageVATValueField = value;
            }
        }
        
        /// <remarks/>
        public string TaxExemptionCert {
            get {
                return this.taxExemptionCertField;
            }
            set {
                this.taxExemptionCertField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryRequiredDate {
            get {
                return this.deliveryRequiredDateField;
            }
            set {
                this.deliveryRequiredDateField = value;
            }
        }
        
        /// <remarks/>
        public string SpecialInstructions {
            get {
                return this.specialInstructionsField;
            }
            set {
                this.specialInstructionsField = value;
            }
        }
        
        /// <remarks/>
        public string FromCSVFile {
            get {
                return this.fromCSVFileField;
            }
            set {
                this.fromCSVFileField = value;
            }
        }
        
        /// <remarks/>
        public string SampleBasketID {
            get {
                return this.sampleBasketIDField;
            }
            set {
                this.sampleBasketIDField = value;
            }
        }
        
        /// <remarks/>
        public string OrderNo {
            get {
                return this.orderNoField;
            }
            set {
                this.orderNoField = value;
            }
        }
        
        /// <remarks/>
        public OrderLine[] OrderLines {
            get {
                return this.orderLinesField;
            }
            set {
                this.orderLinesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class OrderLine {
        
        private string customerAccountCodeField;
        
        private string orderLineNumberField;
        
        private string productCodeField;
        
        private string orderQuantityField;
        
        private string sampleIndicatorField;
        
        private string backOrderIndicatorField;
        
        private string reserveIndicatorField;
        
        private string discountPercentageField;
        
        private string numberOfField;
        
        private string quantityField;
        
        private string lineNotesField;
        
        private string orderUnitField;
        
        private string customersOwnReferenceField;
        
        private string autoUpdateKeyField;
        
        private string withCuttingIndicatorField;
        
        private string specificBatchIndField;
        
        private string orderLinePriceField;
        
        private string orderLineValueField;
        
        private string orderLineVATCodeField;
        
        private string orderLineVATValueField;
        
        /// <remarks/>
        public string CustomerAccountCode {
            get {
                return this.customerAccountCodeField;
            }
            set {
                this.customerAccountCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderLineNumber {
            get {
                return this.orderLineNumberField;
            }
            set {
                this.orderLineNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderQuantity {
            get {
                return this.orderQuantityField;
            }
            set {
                this.orderQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string SampleIndicator {
            get {
                return this.sampleIndicatorField;
            }
            set {
                this.sampleIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string BackOrderIndicator {
            get {
                return this.backOrderIndicatorField;
            }
            set {
                this.backOrderIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string ReserveIndicator {
            get {
                return this.reserveIndicatorField;
            }
            set {
                this.reserveIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountPercentage {
            get {
                return this.discountPercentageField;
            }
            set {
                this.discountPercentageField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOf {
            get {
                return this.numberOfField;
            }
            set {
                this.numberOfField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string LineNotes {
            get {
                return this.lineNotesField;
            }
            set {
                this.lineNotesField = value;
            }
        }
        
        /// <remarks/>
        public string OrderUnit {
            get {
                return this.orderUnitField;
            }
            set {
                this.orderUnitField = value;
            }
        }
        
        /// <remarks/>
        public string CustomersOwnReference {
            get {
                return this.customersOwnReferenceField;
            }
            set {
                this.customersOwnReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string AutoUpdateKey {
            get {
                return this.autoUpdateKeyField;
            }
            set {
                this.autoUpdateKeyField = value;
            }
        }
        
        /// <remarks/>
        public string WithCuttingIndicator {
            get {
                return this.withCuttingIndicatorField;
            }
            set {
                this.withCuttingIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string SpecificBatchInd {
            get {
                return this.specificBatchIndField;
            }
            set {
                this.specificBatchIndField = value;
            }
        }
        
        /// <remarks/>
        public string OrderLinePrice {
            get {
                return this.orderLinePriceField;
            }
            set {
                this.orderLinePriceField = value;
            }
        }
        
        /// <remarks/>
        public string OrderLineValue {
            get {
                return this.orderLineValueField;
            }
            set {
                this.orderLineValueField = value;
            }
        }
        
        /// <remarks/>
        public string OrderLineVATCode {
            get {
                return this.orderLineVATCodeField;
            }
            set {
                this.orderLineVATCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderLineVATValue {
            get {
                return this.orderLineVATValueField;
            }
            set {
                this.orderLineVATValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class CustomerAddress {
        
        private string dELREFField;
        
        private string dELNAMEField;
        
        private string dELADDR1Field;
        
        private string dELADDR2Field;
        
        private string dELADDR3Field;
        
        private string dELADDR4Field;
        
        private string dELPCODEField;
        
        /// <remarks/>
        public string DELREF {
            get {
                return this.dELREFField;
            }
            set {
                this.dELREFField = value;
            }
        }
        
        /// <remarks/>
        public string DELNAME {
            get {
                return this.dELNAMEField;
            }
            set {
                this.dELNAMEField = value;
            }
        }
        
        /// <remarks/>
        public string DELADDR1 {
            get {
                return this.dELADDR1Field;
            }
            set {
                this.dELADDR1Field = value;
            }
        }
        
        /// <remarks/>
        public string DELADDR2 {
            get {
                return this.dELADDR2Field;
            }
            set {
                this.dELADDR2Field = value;
            }
        }
        
        /// <remarks/>
        public string DELADDR3 {
            get {
                return this.dELADDR3Field;
            }
            set {
                this.dELADDR3Field = value;
            }
        }
        
        /// <remarks/>
        public string DELADDR4 {
            get {
                return this.dELADDR4Field;
            }
            set {
                this.dELADDR4Field = value;
            }
        }
        
        /// <remarks/>
        public string DELPCODE {
            get {
                return this.dELPCODEField;
            }
            set {
                this.dELPCODEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class BasketViewModel {
        
        private string customerReferenceField;
        
        private string customerNameField;
        
        private string customerCurrencyField;
        
        private string customerDefaultAddressIDField;
        
        private string webAccountField;
        
        private CustomerAddress[] customerAddressesField;
        
        private Basket[] basketItemsField;
        
        private decimal deliveryValueIncField;
        
        private decimal deliveryValueExField;
        
        private decimal haulageValueIncField;
        
        private decimal haulageValueExField;
        
        private decimal mischargeValueIncField;
        
        private decimal mischargeValueExField;
        
        private string tempDeliveryXmlField;
        
        private decimal taxField;
        
        /// <remarks/>
        public string CustomerReference {
            get {
                return this.customerReferenceField;
            }
            set {
                this.customerReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerCurrency {
            get {
                return this.customerCurrencyField;
            }
            set {
                this.customerCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerDefaultAddressID {
            get {
                return this.customerDefaultAddressIDField;
            }
            set {
                this.customerDefaultAddressIDField = value;
            }
        }
        
        /// <remarks/>
        public string WebAccount {
            get {
                return this.webAccountField;
            }
            set {
                this.webAccountField = value;
            }
        }
        
        /// <remarks/>
        public CustomerAddress[] CustomerAddresses {
            get {
                return this.customerAddressesField;
            }
            set {
                this.customerAddressesField = value;
            }
        }
        
        /// <remarks/>
        public Basket[] BasketItems {
            get {
                return this.basketItemsField;
            }
            set {
                this.basketItemsField = value;
            }
        }
        
        /// <remarks/>
        public decimal DeliveryValueInc {
            get {
                return this.deliveryValueIncField;
            }
            set {
                this.deliveryValueIncField = value;
            }
        }
        
        /// <remarks/>
        public decimal DeliveryValueEx {
            get {
                return this.deliveryValueExField;
            }
            set {
                this.deliveryValueExField = value;
            }
        }
        
        /// <remarks/>
        public decimal HaulageValueInc {
            get {
                return this.haulageValueIncField;
            }
            set {
                this.haulageValueIncField = value;
            }
        }
        
        /// <remarks/>
        public decimal HaulageValueEx {
            get {
                return this.haulageValueExField;
            }
            set {
                this.haulageValueExField = value;
            }
        }
        
        /// <remarks/>
        public decimal MischargeValueInc {
            get {
                return this.mischargeValueIncField;
            }
            set {
                this.mischargeValueIncField = value;
            }
        }
        
        /// <remarks/>
        public decimal MischargeValueEx {
            get {
                return this.mischargeValueExField;
            }
            set {
                this.mischargeValueExField = value;
            }
        }
        
        /// <remarks/>
        public string TempDeliveryXml {
            get {
                return this.tempDeliveryXmlField;
            }
            set {
                this.tempDeliveryXmlField = value;
            }
        }
        
        /// <remarks/>
        public decimal Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class Basket {
        
        private string line_NumberField;
        
        private string product_CodeField;
        
        private string descriptionField;
        
        private string quantity_OrderedField;
        
        private string sample_IndicatorField;
        
        private string discount_PercentageField;
        
        private string item_CntField;
        
        private string item_LenField;
        
        private string line_NotesField;
        
        private string customer_Order_ReferenceField;
        
        private string reserve_IndicatorField;
        
        private string with_CuttingField;
        
        private string from_Specific_BatchField;
        
        private string allocatedField;
        
        private string wi_Status_ImageField;
        
        private string statusField;
        
        private string unit_PriceField;
        
        private string keyField;
        
        private string cUSREFField;
        
        private string cUSNAMEField;
        
        private string uNITSTOCKField;
        
        private string mertexAccountField;
        
        /// <remarks/>
        public string Line_Number {
            get {
                return this.line_NumberField;
            }
            set {
                this.line_NumberField = value;
            }
        }
        
        /// <remarks/>
        public string Product_Code {
            get {
                return this.product_CodeField;
            }
            set {
                this.product_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity_Ordered {
            get {
                return this.quantity_OrderedField;
            }
            set {
                this.quantity_OrderedField = value;
            }
        }
        
        /// <remarks/>
        public string Sample_Indicator {
            get {
                return this.sample_IndicatorField;
            }
            set {
                this.sample_IndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string Discount_Percentage {
            get {
                return this.discount_PercentageField;
            }
            set {
                this.discount_PercentageField = value;
            }
        }
        
        /// <remarks/>
        public string Item_Cnt {
            get {
                return this.item_CntField;
            }
            set {
                this.item_CntField = value;
            }
        }
        
        /// <remarks/>
        public string Item_Len {
            get {
                return this.item_LenField;
            }
            set {
                this.item_LenField = value;
            }
        }
        
        /// <remarks/>
        public string Line_Notes {
            get {
                return this.line_NotesField;
            }
            set {
                this.line_NotesField = value;
            }
        }
        
        /// <remarks/>
        public string Customer_Order_Reference {
            get {
                return this.customer_Order_ReferenceField;
            }
            set {
                this.customer_Order_ReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string Reserve_Indicator {
            get {
                return this.reserve_IndicatorField;
            }
            set {
                this.reserve_IndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string With_Cutting {
            get {
                return this.with_CuttingField;
            }
            set {
                this.with_CuttingField = value;
            }
        }
        
        /// <remarks/>
        public string From_Specific_Batch {
            get {
                return this.from_Specific_BatchField;
            }
            set {
                this.from_Specific_BatchField = value;
            }
        }
        
        /// <remarks/>
        public string Allocated {
            get {
                return this.allocatedField;
            }
            set {
                this.allocatedField = value;
            }
        }
        
        /// <remarks/>
        public string Wi_Status_Image {
            get {
                return this.wi_Status_ImageField;
            }
            set {
                this.wi_Status_ImageField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Unit_Price {
            get {
                return this.unit_PriceField;
            }
            set {
                this.unit_PriceField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string CUSREF {
            get {
                return this.cUSREFField;
            }
            set {
                this.cUSREFField = value;
            }
        }
        
        /// <remarks/>
        public string CUSNAME {
            get {
                return this.cUSNAMEField;
            }
            set {
                this.cUSNAMEField = value;
            }
        }
        
        /// <remarks/>
        public string UNITSTOCK {
            get {
                return this.uNITSTOCKField;
            }
            set {
                this.uNITSTOCKField = value;
            }
        }
        
        /// <remarks/>
        public string MertexAccount {
            get {
                return this.mertexAccountField;
            }
            set {
                this.mertexAccountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class ProductDetail {
        
        private string sampleField;
        
        private string wi_Patt_BooksField;
        
        private string piece_Only_OrdersField;
        
        private string wi_Allow_ReserveField;
        
        private string wi_Status_ImageField;
        
        private string product_CodeField;
        
        private string descriptionField;
        
        private string after_CareField;
        
        private string usageField;
        
        private string finishField;
        
        private string image_NameField;
        
        private string pattern_MatchField;
        
        private string pattmatch_DescField;
        
        private string rub_Test_ResultsField;
        
        private string width_cmsField;
        
        private string free_StockField;
        
        private string number_of_itemsField;
        
        private string origin_CodeField;
        
        private string compositionField;
        
        private string horiz_Ptn_RepeatField;
        
        private string vert_Ptn_RepeatField;
        
        private string drop_Ptn_RepeatField;
        
        private string widthField;
        
        private string next_Due_InField;
        
        private string wi_Duein_CommentField;
        
        private string weightField;
        
        private string technical_DescriptionField;
        
        private string priceField;
        
        private string cut_Length_PricesField;
        
        private string quality_DescriptionField;
        
        private string item_Level_StockField;
        
        private string wi_Show_BatchesField;
        
        private string break_QtyField;
        
        private string break_PriceField;
        
        private string break_Qty2Field;
        
        private string break_Price2Field;
        
        /// <remarks/>
        public string Sample {
            get {
                return this.sampleField;
            }
            set {
                this.sampleField = value;
            }
        }
        
        /// <remarks/>
        public string Wi_Patt_Books {
            get {
                return this.wi_Patt_BooksField;
            }
            set {
                this.wi_Patt_BooksField = value;
            }
        }
        
        /// <remarks/>
        public string Piece_Only_Orders {
            get {
                return this.piece_Only_OrdersField;
            }
            set {
                this.piece_Only_OrdersField = value;
            }
        }
        
        /// <remarks/>
        public string Wi_Allow_Reserve {
            get {
                return this.wi_Allow_ReserveField;
            }
            set {
                this.wi_Allow_ReserveField = value;
            }
        }
        
        /// <remarks/>
        public string Wi_Status_Image {
            get {
                return this.wi_Status_ImageField;
            }
            set {
                this.wi_Status_ImageField = value;
            }
        }
        
        /// <remarks/>
        public string Product_Code {
            get {
                return this.product_CodeField;
            }
            set {
                this.product_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string After_Care {
            get {
                return this.after_CareField;
            }
            set {
                this.after_CareField = value;
            }
        }
        
        /// <remarks/>
        public string Usage {
            get {
                return this.usageField;
            }
            set {
                this.usageField = value;
            }
        }
        
        /// <remarks/>
        public string Finish {
            get {
                return this.finishField;
            }
            set {
                this.finishField = value;
            }
        }
        
        /// <remarks/>
        public string Image_Name {
            get {
                return this.image_NameField;
            }
            set {
                this.image_NameField = value;
            }
        }
        
        /// <remarks/>
        public string Pattern_Match {
            get {
                return this.pattern_MatchField;
            }
            set {
                this.pattern_MatchField = value;
            }
        }
        
        /// <remarks/>
        public string Pattmatch_Desc {
            get {
                return this.pattmatch_DescField;
            }
            set {
                this.pattmatch_DescField = value;
            }
        }
        
        /// <remarks/>
        public string Rub_Test_Results {
            get {
                return this.rub_Test_ResultsField;
            }
            set {
                this.rub_Test_ResultsField = value;
            }
        }
        
        /// <remarks/>
        public string Width_cms {
            get {
                return this.width_cmsField;
            }
            set {
                this.width_cmsField = value;
            }
        }
        
        /// <remarks/>
        public string Free_Stock {
            get {
                return this.free_StockField;
            }
            set {
                this.free_StockField = value;
            }
        }
        
        /// <remarks/>
        public string Number_of_items {
            get {
                return this.number_of_itemsField;
            }
            set {
                this.number_of_itemsField = value;
            }
        }
        
        /// <remarks/>
        public string Origin_Code {
            get {
                return this.origin_CodeField;
            }
            set {
                this.origin_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Composition {
            get {
                return this.compositionField;
            }
            set {
                this.compositionField = value;
            }
        }
        
        /// <remarks/>
        public string Horiz_Ptn_Repeat {
            get {
                return this.horiz_Ptn_RepeatField;
            }
            set {
                this.horiz_Ptn_RepeatField = value;
            }
        }
        
        /// <remarks/>
        public string Vert_Ptn_Repeat {
            get {
                return this.vert_Ptn_RepeatField;
            }
            set {
                this.vert_Ptn_RepeatField = value;
            }
        }
        
        /// <remarks/>
        public string Drop_Ptn_Repeat {
            get {
                return this.drop_Ptn_RepeatField;
            }
            set {
                this.drop_Ptn_RepeatField = value;
            }
        }
        
        /// <remarks/>
        public string Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public string Next_Due_In {
            get {
                return this.next_Due_InField;
            }
            set {
                this.next_Due_InField = value;
            }
        }
        
        /// <remarks/>
        public string Wi_Duein_Comment {
            get {
                return this.wi_Duein_CommentField;
            }
            set {
                this.wi_Duein_CommentField = value;
            }
        }
        
        /// <remarks/>
        public string Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public string Technical_Description {
            get {
                return this.technical_DescriptionField;
            }
            set {
                this.technical_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string Cut_Length_Prices {
            get {
                return this.cut_Length_PricesField;
            }
            set {
                this.cut_Length_PricesField = value;
            }
        }
        
        /// <remarks/>
        public string Quality_Description {
            get {
                return this.quality_DescriptionField;
            }
            set {
                this.quality_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Item_Level_Stock {
            get {
                return this.item_Level_StockField;
            }
            set {
                this.item_Level_StockField = value;
            }
        }
        
        /// <remarks/>
        public string Wi_Show_Batches {
            get {
                return this.wi_Show_BatchesField;
            }
            set {
                this.wi_Show_BatchesField = value;
            }
        }
        
        /// <remarks/>
        public string Break_Qty {
            get {
                return this.break_QtyField;
            }
            set {
                this.break_QtyField = value;
            }
        }
        
        /// <remarks/>
        public string Break_Price {
            get {
                return this.break_PriceField;
            }
            set {
                this.break_PriceField = value;
            }
        }
        
        /// <remarks/>
        public string Break_Qty2 {
            get {
                return this.break_Qty2Field;
            }
            set {
                this.break_Qty2Field = value;
            }
        }
        
        /// <remarks/>
        public string Break_Price2 {
            get {
                return this.break_Price2Field;
            }
            set {
                this.break_Price2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class ProductForImport {
        
        private string priceField;
        
        private string sampleField;
        
        private string pattBooksField;
        
        private string pieceOnlyOrdersField;
        
        private string allowReserveField;
        
        private string statusImageField;
        
        private string productCodeField;
        
        private string descriptionField;
        
        private string afterCareField;
        
        private string usageField;
        
        private string finishField;
        
        private string imageNameField;
        
        private string patternMatchField;
        
        private string patternMatchDescriptionField;
        
        private string rubTestResultsField;
        
        private string widthField;
        
        private string designCodeField;
        
        private string designNameField;
        
        private string collectionNameField;
        
        private string descriptiveColourField;
        
        private string productGroupField;
        
        private string productTypeField;
        
        private string designTypeField;
        
        private string designStyleField;
        
        private string salesDivisionField;
        
        private string techCompositionField;
        
        private string compositionField;
        
        private string smallScaleField;
        
        private string usageCodeField;
        
        private string usageImageCodesField;
        
        private string rRPField;
        
        private string frDomesticField;
        
        private string frContractField;
        
        private string frDrapesField;
        
        private string frWallpaperField;
        
        private string contractField;
        
        private string blackoutField;
        
        private string designDetailsSortField;
        
        private string collectionSortField;
        
        private string newCollectionField;
        
        private string imageListField;
        
        private string onDetailPageField;
        
        private string imageTypeField;
        
        private string percentageColourField;
        
        private string overallLightnessColourField;
        
        private string designDescriptionField;
        
        private string complementaryProductsField;
        
        private string otherCollectionsField;
        
        private string comingSoonUKField;
        
        private string comingSoonUSField;
        
        private string colourCodesField;
        
        private string sellCoField;
        
        private string afterCareCodesField;
        
        private string sortNameField;
        
        private string verticalPatternRepeatField;
        
        private string horizontalPatternRepeatField;
        
        private string sampleProductCodesField;
        
        private string otherInfoField;
        
        private string styleLibraryVisibleField;
        
        private string compositionDescriptionField;
        
        private string stockCodeField;
        
        private string launchDateField;
        
        private string readyForWebField;
        
        private string isOptionProductField;
        
        private string outOfStockField;
        
        private string siteVisibilityField;
        
        private string itemTypeField;
        
        private string defaultOrderLocationField;
        
        private string mertexAccountField;
        
        private string uKPriceField;
        
        private string uSPriceField;
        
        private string eURPriceField;
        
        private string stockLevelField;
        
        private string stockLevelUnitOfMeasurementField;
        
        private string dueInField;
        
        private string dueInQuantityField;
        
        private string parentProductCodeField;
        
        private string styleLibraryContractVisibleField;
        
        /// <remarks/>
        public string Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string Sample {
            get {
                return this.sampleField;
            }
            set {
                this.sampleField = value;
            }
        }
        
        /// <remarks/>
        public string PattBooks {
            get {
                return this.pattBooksField;
            }
            set {
                this.pattBooksField = value;
            }
        }
        
        /// <remarks/>
        public string PieceOnlyOrders {
            get {
                return this.pieceOnlyOrdersField;
            }
            set {
                this.pieceOnlyOrdersField = value;
            }
        }
        
        /// <remarks/>
        public string AllowReserve {
            get {
                return this.allowReserveField;
            }
            set {
                this.allowReserveField = value;
            }
        }
        
        /// <remarks/>
        public string StatusImage {
            get {
                return this.statusImageField;
            }
            set {
                this.statusImageField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string AfterCare {
            get {
                return this.afterCareField;
            }
            set {
                this.afterCareField = value;
            }
        }
        
        /// <remarks/>
        public string Usage {
            get {
                return this.usageField;
            }
            set {
                this.usageField = value;
            }
        }
        
        /// <remarks/>
        public string Finish {
            get {
                return this.finishField;
            }
            set {
                this.finishField = value;
            }
        }
        
        /// <remarks/>
        public string ImageName {
            get {
                return this.imageNameField;
            }
            set {
                this.imageNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatternMatch {
            get {
                return this.patternMatchField;
            }
            set {
                this.patternMatchField = value;
            }
        }
        
        /// <remarks/>
        public string PatternMatchDescription {
            get {
                return this.patternMatchDescriptionField;
            }
            set {
                this.patternMatchDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string RubTestResults {
            get {
                return this.rubTestResultsField;
            }
            set {
                this.rubTestResultsField = value;
            }
        }
        
        /// <remarks/>
        public string Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public string DesignCode {
            get {
                return this.designCodeField;
            }
            set {
                this.designCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DesignName {
            get {
                return this.designNameField;
            }
            set {
                this.designNameField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionName {
            get {
                return this.collectionNameField;
            }
            set {
                this.collectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string DescriptiveColour {
            get {
                return this.descriptiveColourField;
            }
            set {
                this.descriptiveColourField = value;
            }
        }
        
        /// <remarks/>
        public string ProductGroup {
            get {
                return this.productGroupField;
            }
            set {
                this.productGroupField = value;
            }
        }
        
        /// <remarks/>
        public string ProductType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DesignType {
            get {
                return this.designTypeField;
            }
            set {
                this.designTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DesignStyle {
            get {
                return this.designStyleField;
            }
            set {
                this.designStyleField = value;
            }
        }
        
        /// <remarks/>
        public string SalesDivision {
            get {
                return this.salesDivisionField;
            }
            set {
                this.salesDivisionField = value;
            }
        }
        
        /// <remarks/>
        public string TechComposition {
            get {
                return this.techCompositionField;
            }
            set {
                this.techCompositionField = value;
            }
        }
        
        /// <remarks/>
        public string Composition {
            get {
                return this.compositionField;
            }
            set {
                this.compositionField = value;
            }
        }
        
        /// <remarks/>
        public string SmallScale {
            get {
                return this.smallScaleField;
            }
            set {
                this.smallScaleField = value;
            }
        }
        
        /// <remarks/>
        public string UsageCode {
            get {
                return this.usageCodeField;
            }
            set {
                this.usageCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UsageImageCodes {
            get {
                return this.usageImageCodesField;
            }
            set {
                this.usageImageCodesField = value;
            }
        }
        
        /// <remarks/>
        public string RRP {
            get {
                return this.rRPField;
            }
            set {
                this.rRPField = value;
            }
        }
        
        /// <remarks/>
        public string FrDomestic {
            get {
                return this.frDomesticField;
            }
            set {
                this.frDomesticField = value;
            }
        }
        
        /// <remarks/>
        public string FrContract {
            get {
                return this.frContractField;
            }
            set {
                this.frContractField = value;
            }
        }
        
        /// <remarks/>
        public string FrDrapes {
            get {
                return this.frDrapesField;
            }
            set {
                this.frDrapesField = value;
            }
        }
        
        /// <remarks/>
        public string FrWallpaper {
            get {
                return this.frWallpaperField;
            }
            set {
                this.frWallpaperField = value;
            }
        }
        
        /// <remarks/>
        public string Contract {
            get {
                return this.contractField;
            }
            set {
                this.contractField = value;
            }
        }
        
        /// <remarks/>
        public string Blackout {
            get {
                return this.blackoutField;
            }
            set {
                this.blackoutField = value;
            }
        }
        
        /// <remarks/>
        public string DesignDetailsSort {
            get {
                return this.designDetailsSortField;
            }
            set {
                this.designDetailsSortField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionSort {
            get {
                return this.collectionSortField;
            }
            set {
                this.collectionSortField = value;
            }
        }
        
        /// <remarks/>
        public string NewCollection {
            get {
                return this.newCollectionField;
            }
            set {
                this.newCollectionField = value;
            }
        }
        
        /// <remarks/>
        public string ImageList {
            get {
                return this.imageListField;
            }
            set {
                this.imageListField = value;
            }
        }
        
        /// <remarks/>
        public string OnDetailPage {
            get {
                return this.onDetailPageField;
            }
            set {
                this.onDetailPageField = value;
            }
        }
        
        /// <remarks/>
        public string ImageType {
            get {
                return this.imageTypeField;
            }
            set {
                this.imageTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PercentageColour {
            get {
                return this.percentageColourField;
            }
            set {
                this.percentageColourField = value;
            }
        }
        
        /// <remarks/>
        public string OverallLightnessColour {
            get {
                return this.overallLightnessColourField;
            }
            set {
                this.overallLightnessColourField = value;
            }
        }
        
        /// <remarks/>
        public string DesignDescription {
            get {
                return this.designDescriptionField;
            }
            set {
                this.designDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ComplementaryProducts {
            get {
                return this.complementaryProductsField;
            }
            set {
                this.complementaryProductsField = value;
            }
        }
        
        /// <remarks/>
        public string OtherCollections {
            get {
                return this.otherCollectionsField;
            }
            set {
                this.otherCollectionsField = value;
            }
        }
        
        /// <remarks/>
        public string ComingSoonUK {
            get {
                return this.comingSoonUKField;
            }
            set {
                this.comingSoonUKField = value;
            }
        }
        
        /// <remarks/>
        public string ComingSoonUS {
            get {
                return this.comingSoonUSField;
            }
            set {
                this.comingSoonUSField = value;
            }
        }
        
        /// <remarks/>
        public string ColourCodes {
            get {
                return this.colourCodesField;
            }
            set {
                this.colourCodesField = value;
            }
        }
        
        /// <remarks/>
        public string SellCo {
            get {
                return this.sellCoField;
            }
            set {
                this.sellCoField = value;
            }
        }
        
        /// <remarks/>
        public string AfterCareCodes {
            get {
                return this.afterCareCodesField;
            }
            set {
                this.afterCareCodesField = value;
            }
        }
        
        /// <remarks/>
        public string SortName {
            get {
                return this.sortNameField;
            }
            set {
                this.sortNameField = value;
            }
        }
        
        /// <remarks/>
        public string VerticalPatternRepeat {
            get {
                return this.verticalPatternRepeatField;
            }
            set {
                this.verticalPatternRepeatField = value;
            }
        }
        
        /// <remarks/>
        public string HorizontalPatternRepeat {
            get {
                return this.horizontalPatternRepeatField;
            }
            set {
                this.horizontalPatternRepeatField = value;
            }
        }
        
        /// <remarks/>
        public string SampleProductCodes {
            get {
                return this.sampleProductCodesField;
            }
            set {
                this.sampleProductCodesField = value;
            }
        }
        
        /// <remarks/>
        public string OtherInfo {
            get {
                return this.otherInfoField;
            }
            set {
                this.otherInfoField = value;
            }
        }
        
        /// <remarks/>
        public string StyleLibraryVisible {
            get {
                return this.styleLibraryVisibleField;
            }
            set {
                this.styleLibraryVisibleField = value;
            }
        }
        
        /// <remarks/>
        public string CompositionDescription {
            get {
                return this.compositionDescriptionField;
            }
            set {
                this.compositionDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string StockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LaunchDate {
            get {
                return this.launchDateField;
            }
            set {
                this.launchDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReadyForWeb {
            get {
                return this.readyForWebField;
            }
            set {
                this.readyForWebField = value;
            }
        }
        
        /// <remarks/>
        public string IsOptionProduct {
            get {
                return this.isOptionProductField;
            }
            set {
                this.isOptionProductField = value;
            }
        }
        
        /// <remarks/>
        public string OutOfStock {
            get {
                return this.outOfStockField;
            }
            set {
                this.outOfStockField = value;
            }
        }
        
        /// <remarks/>
        public string SiteVisibility {
            get {
                return this.siteVisibilityField;
            }
            set {
                this.siteVisibilityField = value;
            }
        }
        
        /// <remarks/>
        public string ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultOrderLocation {
            get {
                return this.defaultOrderLocationField;
            }
            set {
                this.defaultOrderLocationField = value;
            }
        }
        
        /// <remarks/>
        public string MertexAccount {
            get {
                return this.mertexAccountField;
            }
            set {
                this.mertexAccountField = value;
            }
        }
        
        /// <remarks/>
        public string UKPrice {
            get {
                return this.uKPriceField;
            }
            set {
                this.uKPriceField = value;
            }
        }
        
        /// <remarks/>
        public string USPrice {
            get {
                return this.uSPriceField;
            }
            set {
                this.uSPriceField = value;
            }
        }
        
        /// <remarks/>
        public string EURPrice {
            get {
                return this.eURPriceField;
            }
            set {
                this.eURPriceField = value;
            }
        }
        
        /// <remarks/>
        public string StockLevel {
            get {
                return this.stockLevelField;
            }
            set {
                this.stockLevelField = value;
            }
        }
        
        /// <remarks/>
        public string StockLevelUnitOfMeasurement {
            get {
                return this.stockLevelUnitOfMeasurementField;
            }
            set {
                this.stockLevelUnitOfMeasurementField = value;
            }
        }
        
        /// <remarks/>
        public string DueIn {
            get {
                return this.dueInField;
            }
            set {
                this.dueInField = value;
            }
        }
        
        /// <remarks/>
        public string DueInQuantity {
            get {
                return this.dueInQuantityField;
            }
            set {
                this.dueInQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string ParentProductCode {
            get {
                return this.parentProductCodeField;
            }
            set {
                this.parentProductCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StyleLibraryContractVisible {
            get {
                return this.styleLibraryContractVisibleField;
            }
            set {
                this.styleLibraryContractVisibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mertex.redant.com/")]
    public partial class ProductOption {
        
        private string optionProductCodeField;
        
        /// <remarks/>
        public string OptionProductCode {
            get {
                return this.optionProductCodeField;
            }
            set {
                this.optionProductCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void AttemptLoginCompletedEventHandler(object sender, AttemptLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttemptLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AttemptLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetProductPriceCompletedEventHandler(object sender, GetProductPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetProductPricePOCOCompletedEventHandler(object sender, GetProductPricePOCOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductPricePOCOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductPricePOCOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetPricePOCOListForProductListCompletedEventHandler(object sender, GetPricePOCOListForProductListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPricePOCOListForProductListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPricePOCOListForProductListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetProductDetailCompletedEventHandler(object sender, GetProductDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetProductOptionsForImportCompletedEventHandler(object sender, GetProductOptionsForImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductOptionsForImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductOptionsForImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductOption[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductOption[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetProductListForImportCompletedEventHandler(object sender, GetProductListForImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductListForImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductListForImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductForImport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductForImport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetProductListForPartialImportCompletedEventHandler(object sender, GetProductListForPartialImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductListForPartialImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductListForPartialImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductForImport[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductForImport[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetProductDetailsPOCOCompletedEventHandler(object sender, GetProductDetailsPOCOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductDetailsPOCOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductDetailsPOCOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetProductDetailsListPOCOCompletedEventHandler(object sender, GetProductDetailsListPOCOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductDetailsListPOCOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductDetailsListPOCOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetChangedProductDetailsListPOCOCompletedEventHandler(object sender, GetChangedProductDetailsListPOCOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangedProductDetailsListPOCOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangedProductDetailsListPOCOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2BOrderEnquiryCompletedEventHandler(object sender, B2BOrderEnquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BOrderEnquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BOrderEnquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2BRemoveBasketItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2BClearBasketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2BGetBasketSummaryCompletedEventHandler(object sender, B2BGetBasketSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BGetBasketSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BGetBasketSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Basket Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Basket)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2BGetBasketCompletedEventHandler(object sender, B2BGetBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BGetBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BGetBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BasketViewModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BasketViewModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2BCreateOrderCompletedEventHandler(object sender, B2BCreateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BCreateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BCreateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2CCreateBasketCompletedEventHandler(object sender, B2CCreateBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CCreateBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CCreateBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2COrderEnquiryCompletedEventHandler(object sender, B2COrderEnquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2COrderEnquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2COrderEnquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetCarriageOptionsRawCompletedEventHandler(object sender, GetCarriageOptionsRawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarriageOptionsRawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarriageOptionsRawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetCarriageOptionsCompletedEventHandler(object sender, GetCarriageOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarriageOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarriageOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CarriageOption[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CarriageOption[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetStockistCompletedEventHandler(object sender, GetStockistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Stockist[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Stockist[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void CustomerNameFromCustomerRefCompletedEventHandler(object sender, CustomerNameFromCustomerRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerNameFromCustomerRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerNameFromCustomerRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void GetCustomerAddressesCompletedEventHandler(object sender, GetCustomerAddressesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void InvoiceEnquiryCompletedEventHandler(object sender, InvoiceEnquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceEnquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvoiceEnquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void MarkInvoiceAsPaidCompletedEventHandler(object sender, MarkInvoiceAsPaidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkInvoiceAsPaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarkInvoiceAsPaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2CStockLookupRawCompletedEventHandler(object sender, B2CStockLookupRawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CStockLookupRawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CStockLookupRawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2CStockLookupCompletedEventHandler(object sender, B2CStockLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CStockLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CStockLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockAvailable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockAvailable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    public delegate void B2CZeroStockCheckCompletedEventHandler(object sender, B2CZeroStockCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CZeroStockCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CZeroStockCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockAvailable[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockAvailable[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591