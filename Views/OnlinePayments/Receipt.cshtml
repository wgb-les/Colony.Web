@using Colony.CMS.Security.Helpers
@using Colony.Commerce
@using Colony.Commerce.Models
@model Colony.Commerce.Areas.AccountArea.Controllers.Models.OrderDetailViewModel
@{
    ViewBag.Title = "Receipt";
}
@if (Model.TransactionStatus == TransactionStatus.PaymentComplete)
{
    var googleKey = "";
    switch (ShopContext.Current.CurrentShop.ShopKey.ToLower())
    {
        case "harlequin":
            googleKey = "UA-1919380-4";
            break;
        case "sanderson":
            googleKey = "UA-1919380-5";
            break;
        case "zoffany":
            googleKey = "UA-1919380-6";
            break;
        case "morris":
            googleKey = "UA-1919380-7";
            break;
        case "scion":
            googleKey = "UA-1919380-11";
            break;
        case "anthology":
            googleKey = "UA-1919380-15";
            break;
        case "wg":
            googleKey = "UA-1919380-13";
            break;
        case "style-library-contract":
            googleKey = "UA-1919380-24";
            break;
        default:
            googleKey = "UA-1919380-5";
            break;
    }

    <script type="text/javascript">
        $(document).ready(function() {

            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', '@googleKey']);
            _gaq.push(['_trackPageview']);

            //var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            //ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            //var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);

            (function(i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r;
                i[r] = i[r] || function() {
                    (i[r].q = i[r].q || []).push(arguments);
                }, i[r].l = 1 * new Date();
                a = s.createElement(o),
                    m = s.getElementsByTagName(o)[0];
                a.async = 1;
                a.src = g;
                m.parentNode.insertBefore(a, m);
            })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

            ga('create', '@googleKey', 'auto');
            //ga('send', 'pageview');


            ga('require', 'ecommerce');
            ga('ecommerce:addTransaction', {
                'id': '@Model.OrderNumber', // Transaction ID. Required.
                'affiliation': '@ShopContext.Current.CurrentShop.ShopKey', // Affiliation or store name.
                'revenue': '@Model.Basket.GrandTotal', // Grand Total.
                'shipping': '@Model.Basket.DeliveryCost', // Shipping.
                'tax': '@Model.Basket.TotalVat' // Tax.
            });

            @foreach (var line in Model.Basket.BasketLines)
            {
                <text>
            ga('ecommerce:addItem', {
                'id': '@Model.OrderNumber',
                'name': '@line.Name',
                'sku': '@line.Sku.Code',
                'category': '@line.Attributes.GetValueOrNull("Product Group")',
                'price': '@line.UnitPriceInc',
                'quantity': '@line.Quantity',
                'currency': 'GBP' // local currency code.
            });

            </text>
            }
            ga('ecommerce:send');
        });
    </script>
    <div id="container" role="main" class="col-1">
        <div id="content" class="">

            <header class="fullContent">
                <h1>Thank you for your order @Model.OrderNumber</h1>
                <p>
                    Your order has been received and is being processed. Please feel free to <a href="/contact-us/" title="Contact Us">contact us</a> if you have any questions.
                </p>
                <p>Your order is accepted at the discretion of the Seller. Payment does not indicate order acceptance and your payment will be refunded if your offer is refused.</p>
            </header>

            @if (!AuthenticationHelpers.IsLoggedIn())
            {
                if (ViewBag.AccountCreated == false)
                {
                    Html.RenderAction("Convert", "Guest", new {area = "Members", personId = ViewBag.PersonId});
                }
                else
                {
                    <div class="alertInfo confirmation">Your account has been created. Please check your e-mail.</div>
                }
            }

            <div class="boxSection checkoutAbout completed">
                <div class="header">
                    <h2>About you</h2>
                </div>
                <ul>
                    <li>
                        <strong>@Model.Person.Title @Model.Person.FirstName @Model.Person.LastName</strong>
                    </li>
                    <li>@Model.Person.Email</li>
                    <li>@(Model.Person.PhoneNumber ?? @Model.Person.MobileNumber)</li>
                </ul>
            </div>
            <div class="boxSection checkoutDelivery completed">
                <div class="header">
                    <h2>Delivery Address</h2>
                </div>
                <ul>
                    @if (Model.DeliveryAddress != null)
                    {
                        <li>
                            <strong>@Model.DeliveryAddress.Title @Model.DeliveryAddress.FirstName @Model.DeliveryAddress.LastName</strong>
                        </li>
                        <li>@Html.FormatAddress(Model.DeliveryAddress, HtmlHelpers.FormatAddressStyle.SingleLine)</li>
                    }
                </ul>
            </div>
            @if (Model.BillingAddress != null)
            {
                <div class="boxSection checkoutDelivery completed">
                    <div class="header">
                        <h2>Billing</h2>
                    </div>

                    <ul>
                        <li>
                            <strong>@Model.BillingAddress.Title @Model.BillingAddress.FirstName @Model.BillingAddress.LastName</strong>
                        </li>
                        <li>@Html.FormatAddress(Model.BillingAddress, HtmlHelpers.FormatAddressStyle.SingleLine)</li>
                    </ul>

                </div>
            }
            <section class="boxSection basketSummary">
                <header>
                    @{
                        var basketQuantity = Model.Basket.BasketLines.Sum(x => x.Quantity);
                    }
                    <h2>
                        <span>Your order contains </span>@basketQuantity item@(basketQuantity != 1 ? "s" : "")
                    </h2>
                </header>
                @foreach (var basketLine in Model.Basket.BasketLines)
                {
                    <div class="basketItem">
                        <div class="details">
                            <h2>
                                <a href="/shop/@basketLine.Url?code=@basketLine.Sku.Code">@basketLine.Sku.Name</a>
                            </h2>
                            <dl>
                                @if (basketLine.Attributes.ContainsKey("Descriptive Colour"))
                                {
                                    <dt>Colour</dt>
                                    <dd>@(basketLine.Attributes.GetValueOrNull("Descriptive Colour"))</dd>
                                }
                                <dt>@basketLine.Attributes.GetValueOrNull("Product Group")</dt>
                                <dd>@basketLine.Sku.Code</dd>
                            </dl>
                        </div>
                        <p class="value">
                            <span>Item Price: </span> @Html.Raw(basketLine.UnitPriceInc > 0 ? "&pound;" + basketLine.UnitPriceInc.ToString("#0.00") : "FREE")</p>
                        <p class="quantity">
                            <span>Quantity: </span>@basketLine.Quantity</p>
                        <p class="value">
                            <span>Sub Total: </span>@Html.Raw(basketLine.TotalInc > 0 ? "&pound;" + basketLine.TotalInc.ToString("#0.00") : "FREE")</p>
                    </div>
                }
            </section>
        </div>
        <aside class="sideCol rightCol">
            <div class="basketTotals">
                <dl>
                    <dt>Sub Total</dt>
                    <dd>@Model.Basket.TotalInc.ToString("C2")</dd>
                    @if (ViewBag.IsClickAndCollect)
                    {
                        <dt>Click and Collect</dt>
                    }
                    else
                    {
                        <dt>Delivery</dt>
                    }
                    <dd>@Model.Basket.DeliveryCost.ToString("C2")</dd>
                    <dt class="total">Total</dt>
                    <dd class="total">@Model.Basket.GrandTotal.ToString("C2")</dd>
                </dl>
                <a href="#" class="print actionButton" id="printReceipt">
                    <span>Print order summary</span></a>
            </div>
        </aside>
    </div>
}
else
{
    <div id="container" role="main" class="col-1">
        <div id="content" class="">
            <header class="fullContent">
                <h1>Your order @Model.OrderNumber was unsuccessful</h1>
                @{
                    var dataCashFailureReason = string.Empty;
                    if (Model.TransactionFailureReason == null)
                    {
                        dataCashFailureReason = "Your payment has been declined due to an error in processing.";
                    }
                    else
                    {
                        switch (Model.TransactionFailureReason.ToUpperInvariant())
                        {
                            case "CV2AVS DECLINED":
                                dataCashFailureReason = "It appears that your billing address does not match the address stored by your card issuer.  Please return to the checkout and try again, using the address held by your card issuer.";
                                break;
                            case "DECLINED":
                                dataCashFailureReason = "Your card issuer has declined this transaction.  Please return to the checkout and ensure that your card details are correct or speak to your card issuer for more details.";
                                break;
                            case "3DS PAYER FAILED VERIFICTATION":
                                dataCashFailureReason = "It appears that the password you have provided for 3D Secure verification does not match the details held by your card issuer.";
                                break;
                            default:
                                dataCashFailureReason = Model.TransactionFailureReason;
                                break;
                        }
                    }
                }

                <p>
                    Your order was unsuccessful. Please feel free to <a href="/contact-us/" title="Contact Us">contact us</a> if you have any questions.
                </p>
                <p>@dataCashFailureReason</p>
                <a class="button" href="/checkout/">Return to checkout</a>
            </header>
        </div>
    </div>
    <img src="https://shared.stylelibrary.com/sharedbasket/clearbasketshim/" style="display: none;"/>
}